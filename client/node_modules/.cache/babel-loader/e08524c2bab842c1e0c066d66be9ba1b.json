{"ast":null,"code":"var _jsxFileName = \"F:\\\\weatherApp\\\\client\\\\src\\\\App.js\";\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport bg from \"./assets/DayBackground.png\";\nimport bg2 from \"./assets/NightBackground.png\";\nimport Form from \"react-bootstrap/Form\";\nimport Select from \"react-select\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport SelectDropDownComponent from \"./dropdown\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { connect } from \"react-redux\";\nimport { updateWeather } from \"./redux/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.fetchWeather = async () => {\n      var weather = {}; //var url2=\"http://api.weatherstack.com/current?access_key=1b6fdda898c99d874820e27ed6aa564a&query=\"+this.state.city;\n\n      var url3 = \"http://localhost:3000/city/\" + this.state.city;\n      console.log(\"inside fetch weather\");\n      /* let response = await fetch(url3)                                          chaining also can be used using .then \r\n      .then(response=>response.json())\r\n      .then(data=>console.log(\"response is \",data))\r\n      .then(data=>this.setState({weatherData:data}))\r\n      */\n\n      let response = await fetch(url3);\n      let resjson = await response.json();\n      let errorObj;\n      let errorMessage;\n      console.log(resjson);\n\n      if (!resjson.current) {\n        if (resjson.success == false) {\n          console.log(\"api req failed\");\n          errorMessage = \"City name is invalid\";\n          this.setState({\n            errorMessage: errorMessage\n          });\n        }\n      } else {\n        let location = await resjson.location;\n        let current = await resjson.current;\n        let pressure = await current.pressure;\n        console.log(\"pressure is \" + pressure); // this.setState({ weatherData: current });\n\n        this.props.updateWeatherData(current);\n        this.setState({\n          locationData: location\n        });\n      }\n    };\n\n    this.handleSubmit = async () => {\n      //event.preventDefault()\n      console.log(\"the city is\" + this.state.city);\n      this.fetchWeather();\n    };\n\n    this.hangledropdownChange = async e => {\n      await this.setState({\n        city: e.value\n      });\n      this.handleSubmit();\n    };\n\n    this.state = {\n      // weatherData: \"\",\n      city: \"\",\n      errorMessage: \"\",\n      locationData: \"\",\n      typeOfWeather: \"\"\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"inside component mount\");\n    var url = \"http://localhost:3000/api\";\n    console.log(this.state);\n  }\n\n  //function to fetch weather on submit button of form that has input text box\n\n  /*\r\n  handleChange=async(event)=>{\r\n  console.log(event.target.value)\r\n  this.setState({city:event.target.value});\r\n  }\r\n  */\n  render() {\n    //console.log(this.state.weatherData)\n    let {\n      error\n    } = this.state.errorMessage;\n    console.log(\"error is\" + error);\n    let isday = false;\n\n    if (this.state.weatherData.is_day == \"yes\") {\n      isday = true; // bgimage=bg\n      //console.log(bg)\n    } else {\n      isday = false;\n    }\n\n    console.log(isday); //console.log(bg)\n    //let {pressure}=this.state.weatherData.pressure\n\n    /* let renderError=()=>{\r\n    if(error!= undefined){\r\n      return(\r\n        <p>Please type the correct city name</p>\r\n      )\r\n    }\r\n    else{\r\n      return(\r\n      <h1>Pressure : {this.state.weatherData.pressure}</h1>\r\n      )\r\n    }\r\n    \r\n    }*/\n\n    let sunny = true;\n\n    let renderWeatherIcon = () => {\n      let typeOfWeather = \"\";\n      console.log(this.state.weatherData.weather_descriptions);\n      let weatherDes = this.state.weatherData.weather_descriptions;\n\n      if (weatherDes) {\n        weatherDes.map(type => {\n          typeOfWeather = type;\n          console.log(\"type of weather is \" + typeOfWeather);\n        });\n      }\n\n      if (typeOfWeather == \"Sunny\" || typeOfWeather == \"Clear\") {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"weather-type\",\n          src: require(\"./assets/sunny.jpg\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"weather-type\",\n          src: require(\"./assets/lowcloud.jpg\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this);\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(Provider, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        style: {\n          backgroundImage: isday ? `url(${bg})` : `url(${bg2})`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-6\",\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  options: Countries,\n                  defaultValue: {\n                    label: \"Select City\",\n                    value: 0\n                  },\n                  onChange: e => {\n                    this.hangledropdownChange(e);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"country-info-wind\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"country\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Country : \", this.state.locationData.country]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Region : \", this.state.locationData.region]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wind\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"Wind \", /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: require(\"./assets/Wind Icon.png\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 26\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Wind Speed: \", this.state.weatherData.wind_speed]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Wind Degree : \", this.state.weatherData.wind_degree]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Wind Dir \", this.state.weatherData.wind_dir]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"city-info\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grey-box\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: this.state.locationData.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: renderWeatherIcon()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: this.state.weatherData.weather_descriptions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"temperature\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: require(\"./assets/Temp icon.png\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 21\n                  }, this), \" \", this.state.weatherData.temperature, \" \\xB0C\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time-zone\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Time Zone: \", this.state.locationData.timezone_id, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"localtime : \", this.state.locationData.localtime]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Feels like: \", this.state.weatherData.feelslike, \" \\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-icons\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"subitem\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: this.state.locationData.lat\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: require(\"./assets/Latitude icon.png\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Latitude\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"subitem\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: this.state.locationData.lon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: require(\"./assets/Longitude.png\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Longitude\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"subitem\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: this.state.weatherData.visibility\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: require(\"./assets/Visibility.png\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Visibility\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"subitem\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: this.state.weatherData.cloudcover\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: require(\"./assets/Clould Cover.png\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Cloud cover\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"subitem\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: this.state.weatherData.humidity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: require(\"./assets/Humidity.png\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Humidity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"subitem\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: this.state.weatherData.pressure\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: require(\"./assets/Pressure.png\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"pressure\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"clock\",\n              children: \"clock image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst Countries = [{\n  label: \"New Delhi\",\n  value: \"New Delhi\"\n}, {\n  label: \"Sydney\",\n  value: \"Sydney\"\n}, {\n  label: \"New York\",\n  value: \"New York\"\n}, {\n  label: \"London\",\n  value: \"London\"\n}, {\n  label: \"Kuwait\",\n  value: \"Kuwait\"\n}, {\n  label: \"Pune\",\n  value: \"Pune\"\n}, {\n  label: \"Jaipur\",\n  value: \"Jaipur\"\n}];\n/* can add more cities to the dropdown or introduce an input text box*/\n\nconst mapStateToProps = state => {\n  return {\n    weatherData: this.state.weatherData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateWeatherData: data => dispatch(updateWeather(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["F:/weatherApp/client/src/App.js"],"names":["React","logo","bg","bg2","Form","Select","SelectDropDownComponent","Provider","store","connect","updateWeather","App","Component","constructor","fetchWeather","weather","url3","state","city","console","log","response","fetch","resjson","json","errorObj","errorMessage","current","success","setState","location","pressure","props","updateWeatherData","locationData","handleSubmit","hangledropdownChange","e","value","typeOfWeather","componentDidMount","url","render","error","isday","weatherData","is_day","sunny","renderWeatherIcon","weather_descriptions","weatherDes","map","type","require","backgroundImage","Countries","label","country","region","wind_speed","wind_degree","wind_dir","name","temperature","timezone_id","localtime","feelslike","lat","lon","visibility","cloudcover","humidity","mapStateToProps","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport bg from \"./assets/DayBackground.png\";\r\nimport bg2 from \"./assets/NightBackground.png\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Select from \"react-select\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport SelectDropDownComponent from \"./dropdown\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateWeather } from \"./redux/index\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      // weatherData: \"\",\r\n      city: \"\",\r\n      errorMessage: \"\",\r\n      locationData: \"\",\r\n      typeOfWeather: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    console.log(\"inside component mount\");\r\n    var url = \"http://localhost:3000/api\";\r\n    console.log(this.state);\r\n  }\r\n  fetchWeather = async () => {\r\n    var weather = {};\r\n    //var url2=\"http://api.weatherstack.com/current?access_key=1b6fdda898c99d874820e27ed6aa564a&query=\"+this.state.city;\r\n    var url3 = \"http://localhost:3000/city/\" + this.state.city;\r\n    console.log(\"inside fetch weather\");\r\n    /* let response = await fetch(url3)                                          chaining also can be used using .then \r\n  .then(response=>response.json())\r\n  .then(data=>console.log(\"response is \",data))\r\n .then(data=>this.setState({weatherData:data}))\r\n */\r\n    let response = await fetch(url3);\r\n    let resjson = await response.json();\r\n    let errorObj;\r\n    let errorMessage;\r\n    console.log(resjson);\r\n    if (!resjson.current) {\r\n      if (resjson.success == false) {\r\n        console.log(\"api req failed\");\r\n        errorMessage = \"City name is invalid\";\r\n        this.setState({ errorMessage: errorMessage });\r\n      }\r\n    } else {\r\n      let location = await resjson.location;\r\n      let current = await resjson.current;\r\n      let pressure = await current.pressure;\r\n      console.log(\"pressure is \" + pressure);\r\n      // this.setState({ weatherData: current });\r\n      this.props.updateWeatherData(current);\r\n      this.setState({ locationData: location });\r\n    }\r\n  };\r\n  handleSubmit = async () => {\r\n    //event.preventDefault()\r\n    console.log(\"the city is\" + this.state.city);\r\n    this.fetchWeather();\r\n  };\r\n  hangledropdownChange = async (e) => {\r\n    await this.setState({\r\n      city: e.value,\r\n    });\r\n    this.handleSubmit();\r\n  };\r\n  //function to fetch weather on submit button of form that has input text box\r\n  /*\r\nhandleChange=async(event)=>{\r\nconsole.log(event.target.value)\r\nthis.setState({city:event.target.value});\r\n}\r\n*/\r\n  render() {\r\n    //console.log(this.state.weatherData)\r\n    let { error } = this.state.errorMessage;\r\n    console.log(\"error is\" + error);\r\n    let isday = false;\r\n\r\n    if (this.state.weatherData.is_day == \"yes\") {\r\n      isday = true;\r\n      // bgimage=bg\r\n      //console.log(bg)\r\n    } else {\r\n      isday = false;\r\n    }\r\n    console.log(isday);\r\n    //console.log(bg)\r\n    //let {pressure}=this.state.weatherData.pressure\r\n    /* let renderError=()=>{\r\n    if(error!= undefined){\r\n      return(\r\n        <p>Please type the correct city name</p>\r\n      )\r\n    }\r\n    else{\r\n      return(\r\n      <h1>Pressure : {this.state.weatherData.pressure}</h1>\r\n      )\r\n    }\r\n    \r\n  }*/\r\n    let sunny = true;\r\n\r\n    let renderWeatherIcon = () => {\r\n      let typeOfWeather = \"\";\r\n      console.log(this.state.weatherData.weather_descriptions);\r\n      let weatherDes = this.state.weatherData.weather_descriptions;\r\n      if (weatherDes) {\r\n        weatherDes.map((type) => {\r\n          typeOfWeather = type;\r\n          console.log(\"type of weather is \" + typeOfWeather);\r\n        });\r\n      }\r\n      if (typeOfWeather == \"Sunny\" || typeOfWeather == \"Clear\") {\r\n        return (\r\n          <img className=\"weather-type\" src={require(\"./assets/sunny.jpg\")} />\r\n        );\r\n      } else {\r\n        return (\r\n          <img\r\n            className=\"weather-type\"\r\n            src={require(\"./assets/lowcloud.jpg\")}\r\n          />\r\n        );\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Provider>\r\n        <div\r\n          className=\"App\"\r\n          style={{ backgroundImage: isday ? `url(${bg})` : `url(${bg2})` }}\r\n        >\r\n          <div className=\"container\">\r\n            <div className=\"dropdown\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-3\"></div>\r\n                <div className=\"col-md-6\">\r\n                  <Select\r\n                    options={Countries}\r\n                    defaultValue={{ label: \"Select City\", value: 0 }}\r\n                    onChange={(e) => {\r\n                      this.hangledropdownChange(e);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {\r\n            // Text input box alternative to dropdown\r\n            /*   <div className=\"inputBox\">\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name:\r\n          <input type=\"text\" value={this.state.city} onChange={this.handleChange}/>\r\n        </label>\r\n        <input type=\"submit\" value=\"Submit\" />\r\n      </form>\r\n      </div>*/\r\n          }\r\n          <div className=\"result\">\r\n            <div className=\"info1\">\r\n              <div className=\"country-info-wind\">\r\n                <div className=\"country\">\r\n                  <p>Country : {this.state.locationData.country}</p>\r\n                  <p>Region : {this.state.locationData.region}</p>\r\n                </div>\r\n                <div className=\"wind\">\r\n                  <h3>\r\n                    Wind <img src={require(\"./assets/Wind Icon.png\")} />{\" \"}\r\n                  </h3>\r\n\r\n                  <p>Wind Speed: {this.state.weatherData.wind_speed}</p>\r\n                  <p>Wind Degree : {this.state.weatherData.wind_degree}</p>\r\n                  <p>Wind Dir {this.state.weatherData.wind_dir}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"city-info\">\r\n                <div className=\"grey-box\">\r\n                  <h2>{this.state.locationData.name}</h2>\r\n                  <p>{renderWeatherIcon()}</p>\r\n                  <p>{this.state.weatherData.weather_descriptions}</p>\r\n                  <p className=\"temperature\">\r\n                    {\" \"}\r\n                    <img src={require(\"./assets/Temp icon.png\")} />{\" \"}\r\n                    {this.state.weatherData.temperature} °C\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"time-zone\">\r\n                <p>Time Zone: {this.state.locationData.timezone_id} </p>\r\n                <p>localtime : {this.state.locationData.localtime}</p>\r\n                <p>Feels like: {this.state.weatherData.feelslike} °C</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"info2\">\r\n              <div className=\"weather-icons\">\r\n                <div className=\"subitem\">\r\n                  <p>{this.state.locationData.lat}</p>\r\n                  <p>\r\n                    <img src={require(\"./assets/Latitude icon.png\")} />\r\n                  </p>\r\n                  <p>Latitude</p>\r\n                </div>\r\n                <div className=\"subitem\">\r\n                  <p>{this.state.locationData.lon}</p>\r\n                  <p>\r\n                    <img src={require(\"./assets/Longitude.png\")} />\r\n                  </p>\r\n                  <p>Longitude</p>\r\n                </div>\r\n                <div className=\"subitem\">\r\n                  <p>{this.state.weatherData.visibility}</p>\r\n                  <p>\r\n                    <img src={require(\"./assets/Visibility.png\")} />\r\n                  </p>\r\n                  <p>Visibility</p>\r\n                </div>\r\n                <div className=\"subitem\">\r\n                  <p>{this.state.weatherData.cloudcover}</p>\r\n                  <p>\r\n                    <img src={require(\"./assets/Clould Cover.png\")} />\r\n                  </p>\r\n                  <p>Cloud cover</p>\r\n                </div>\r\n                <div className=\"subitem\">\r\n                  <p>{this.state.weatherData.humidity}</p>\r\n                  <p>\r\n                    <img src={require(\"./assets/Humidity.png\")} />\r\n                  </p>\r\n                  <p>Humidity</p>\r\n                </div>\r\n                <div className=\"subitem\">\r\n                  <p>{this.state.weatherData.pressure}</p>\r\n                  <p>\r\n                    <img src={require(\"./assets/Pressure.png\")} />\r\n                  </p>\r\n                  <p>pressure</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"clock\">clock image</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\nconst Countries = [\r\n  { label: \"New Delhi\", value: \"New Delhi\" },\r\n  { label: \"Sydney\", value: \"Sydney\" },\r\n  { label: \"New York\", value: \"New York\" },\r\n  { label: \"London\", value: \"London\" },\r\n  { label: \"Kuwait\", value: \"Kuwait\" },\r\n  { label: \"Pune\", value: \"Pune\" },\r\n  { label: \"Jaipur\", value: \"Jaipur\" },\r\n];\r\n/* can add more cities to the dropdown or introduce an input text box*/\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { weatherData: this.state.weatherData };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return { updateWeatherData: (data) => dispatch(updateWeather(data)) };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}